name: code-checks

on:
  push:
    branches: [main, master, development, feature/**, hotfix/**, e2e-test-rework]

jobs:
  turbo-checks:
    name: 🔍 turbo-checks
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      - name: corepack
        run: corepack enable
      - name: Install dependencies
        run: |
          export COREPACK_INTEGRITY_KEYS="$(curl https://registry.npmjs.org/-/npm/v1/keys | jq -c '{npm: .keys}')"
          pnpm install
      - name: turbo-checks
        run: pnpm run turbo-checks

  test-e2e:
    name: 🧪 Test e2e
    runs-on: ubuntu-latest
    container: node:20-bullseye
    env:
      HOME: /root
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: brahmsee.digital
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - run: npm ci
      - run: cp -n apps/api/.env.example apps/api/.env
      - name: set test env
        run: sed -i 's/NODE_ENV=development/NODE_ENV=test/g' apps/api/.env
      - run: pnpm -w apps/api prisma migrate reset --force
      - run: pnpm playwright install --with-deps
      - run: npm run test:all
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
