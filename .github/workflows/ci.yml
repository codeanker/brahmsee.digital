# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [development, master]
  pull_request:
    branches: [development, master]

jobs:
  prepare:
    name: 🔨 Initialisieren
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.prop }}
      commit: ${{ steps.set-commit.outputs.commit }}
    steps:
      - uses: actions/checkout@v4
      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: 'package.json'
          prop_path: 'version'
      - name: set commit
        id: set-commit
        run: echo "commit=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

  # build and upload docker image to github container registry
  build:
    name: 🏗️ Build
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/codeanker/brahmsee.digital
          tags: type=sha,prefix=
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            commitHash=${{needs.prepare.outputs.commit}}
            version=${{needs.prepare.outputs.version}}
            mode=${{ env.MODE }}
