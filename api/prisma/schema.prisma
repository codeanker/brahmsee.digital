// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  GLIEDERUNG_ADMIN
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  UNSPECIFIED
}

model Person {
  id          Int         @id @default(autoincrement())
  firstname   String
  lastname    String
  birthday    DateTime? @db.Date
  gender      Gender?
  anmeldungen Anmeldung[]
  gliederungId Int?
  gliederung   Gliederung? @relation(fields: [gliederungId], references: [id])
  account     Account?
}

model Account {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  role     Role
  personId Int?   @unique
  person   Person? @relation(fields: [personId], references: [id])
}

model Landesverband {
  id           Int          @id @default(autoincrement())
  name         String
  edv          String       @unique
  bezirke      Bezirk[]
  gliederungen Gliederung[]
}

model Bezirk {
  id              Int            @id @default(autoincrement())
  name            String
  edv             String         @unique
  landesverbandId Int?
  landesverband   Landesverband? @relation(fields: [landesverbandId], references: [id])
  gliederungen    Gliederung[]
}

model Gliederung {
  id                   Int                  @id @default(autoincrement())
  name                 String
  edv                  String               @unique
  landesverbandId      Int
  bezirkId             Int?
  landesverband        Landesverband        @relation(fields: [landesverbandId], references: [id])
  bezirk               Bezirk?              @relation(fields: [bezirkId], references: [id])
  unterveranstaltungen Unterveranstaltung[]
  personen             Person[]
}

enum AnmeldungStatus {
  OFFEN
  ANGENOMMEN
  STORNIERT
  ABGELEHNT
}

model Anmeldung {
  id                   Int                @id @default(autoincrement())
  unterveranstaltungId Int
  unterveranstaltung   Unterveranstaltung @relation(fields: [unterveranstaltungId], references: [id])
  personId             Int
  person               Person             @relation(fields: [personId], references: [id])
  status               AnmeldungStatus    @default(OFFEN)
}

model Veranstaltung {
  id                   Int                  @id @default(autoincrement())
  name                 String
  beginn               DateTime             @db.Date
  ende                 DateTime             @db.Date
  meldebeginn          DateTime             @db.Date
  meldeschluss         DateTime             @db.Date
  ort                  String               @default("Brahmsee")
  maxTeilnehmende      Int
  teilnahmegebuehr     Int
  unterveranstaltungen Unterveranstaltung[]
}

model Unterveranstaltung {
  id               Int           @id @default(autoincrement())
  maxTeilnehmende  Int
  teilnahmegebuehr Int
  meldebeginn      DateTime      @db.Date
  meldeschluss     DateTime      @db.Date
  veranstaltungId  Int
  veranstaltung    Veranstaltung @relation(fields: [veranstaltungId], references: [id])
  gliederungId     Int
  gliederung       Gliederung    @relation(fields: [gliederungId], references: [id])
  Anmeldung        Anmeldung[]
}
